knitr::opts_chunk$set(echo = TRUE)
library(pander)
library(tidyverse)
#Importing the Datset from My Machine
car_data = read_csv("C:/Users/zaneh/OneDrive/Documents/St_Andrews_2021/Spring 22/Machine Learning/Proejct_1/vehicles.csv")
#Importing Necessary Package
knitr::opts_chunk$set(echo = TRUE)
#Importing Necessary Package
library(pander)
library(tidyverse)
#Importing the Datset from My Machine
car_data = read_csv("C:/Users/zaneh/OneDrive/Documents/St_Andrews_2021/Spring 22/Machine Learning/Proejct_1/vehicles.csv")
ggplot(data = car_data) +
geom_bar(x = price)
ggplot(data = car_data) +
geom_bar(aes(x = price))
ggplot(data = car_data) +
geom_histogram(aes(x = price))
ggplot(data = car_data) +
geom_density(aes(y = price))
ggplot(data = car_data) +
geom_density(aes(x = price))
ggplot(data = car_data) +
geom_density(aes(x = state))
quantile(cars_data$price)
quantile(car_data$price)
describe(car_data$price)
magrittr::describe(car_data$price)
Hmsic::
Hmsic::describe(car_data)
knitr::opts_chunk$set(echo = TRUE)
#Importing Necessary Package
library(pander)
library(tidyverse)
install.packages(Hm)
#Importing the Datset from My Machine
car_data = read_csv("C:/Users/zaneh/OneDrive/Documents/St_Andrews_2021/Spring 22/Machine Learning/Proejct_1/vehicles.csv")
Hmisc::describe(car_data)
install.packages(Hmisc)
ggplot(data = car_data) +
geom_density(aes(x = price), bins = 100)
ggplot(data = car_data) +
geom_density(aes(x = price), binwidt = 100)
ggplot(data = car_data) +
geom_density(aes(x = price), binwidth = 100)
ggplot(data = car_data) +
geom_historam(aes(x = price), binwidth = 100)
ggplot(data = car_data) +
geom_histogram(aes(x = price), binwidth = 100)
ggplot(data = car_data) +
geom_histogram(aes(x = price), binwidth = 1)
summary(car_data$price)
plot(car_data$price)
hist(car_data$price)
hist(car_data$price,
breaks = seq(min(car_data$price),
max(car_data$price),
length.out=100))
hist(car_data$price,
breaks = seq(min(car_data$price),
max(car_data$price),
length.out=10000))
car_data$price
count(car_data)
count(car_data$price)
car_data$price[which(car_data$price == 0)]
count(car_data$price[which(car_data$price == 0)])
length(car_data$price[which(car_data$price == 0)])
length(car_data$price[which(car_data$price == 0)])/length(car_data$price)*100
paste(length(car_data$price[which(car_data$price == 0)])/length(car_data$price)*100,"%")
paste(round(length(car_data$price[which(car_data$price == 0)])/length(car_data$price)*100,2),"%")
paste(round(length(car_data$price[which(car_data$price == 0)])/length(car_data$price)*100,2),"%", sep="")
paste(round(length(car_data$price[which(car_data$price == 0)])/length(car_data$price)*100,2),"% of entries are 0", sep="")
paste(round(length(car_data$price[which(is.na(car_data$price))])/length(car_data$price)*100,2),"% of entries are 0", sep="")
paste(round(length(car_data$price[which(is.na(car_data$price))])/length(car_data$price)*100,2),"% of entries are NA", sep="")
paste(round(length(car_data$state[which(is.na(car_data$state))])/length(car_data$price)*100,2),"% of entries are NA", sep="")
View(car_data)
paste(round(length(car_data$state[which(is.na(car_data$year))])/length(car_data$price)*100,2),"% of entries are NA", sep="")
ncol(car_data)
na_df = data.frame(nrow = 26,
ncol = 2)
na_df
na_df = data.frame(matrix(ncol = 2,
nrow = 26))
na_df
na_df = data.frame(matrix(ncol = 2,
nrow = 26,
NA))
na_df
na_df = data.frame(matrix(NA,
ncol = 2,
nrow = 26,
))
na_df
na_df = data.frame(matrix(rep(NA,52),
ncol = 2,
nrow = 26,
))
na_df
rep(NA,52)
matrix(rep(NA,52))
matrix(rep(NA,52),
26,
2)
data.frame(matrix(rep(NA,52),
26,
2))
data.frame(matrix(rep(10,52),
26,
2))
as.data.frame(matrix(rep(10,52),
26,
2))
matrix(rep(10,52),
26,
2))
matrix(rep(10,52),
26,
2)
x = matrix(rep(10,52),
26,
2)
as.data.frame(x)
View(x)
x = matrix(rep(NA,52),
26,
2)
View(x)
for(i in ncol(car_data)){
#Checking for zero values and NA's
x[i,1] = paste(round(length(car_data$price[which(car_data$price == 0)])/length(car_data$price)*100,2),"% of entries are 0", sep="")
x[i,2] = paste(round(length(car_data[,i][which(is.na(car_data[,i]))])/length(car_data$price)*100,2),"% of entries are NA", sep="")
}
car_data[,i]
car_data[,1]
car_data[,2]
x = matrix(rep(NA,52),
26,
2)
for(i in ncol(car_data)){
#Checking for zero values and NA's
x[i,1] = "test"
# x[i,1] = paste(round(length(car_data$price[which(car_data$price == 0)])/length(car_data$price)*100,2),"% of entries are 0", sep="")
#
# x[i,2] = paste(round(length(car_data[,i][which(is.na(car_data[,i]))])/length(car_data$price)*100,2),"% of entries are NA", sep="")
}
x
for(i in 1:ncol(car_data)){
#Checking for zero values and NA's
x[i,1] = "test"
# x[i,1] = paste(round(length(car_data$price[which(car_data$price == 0)])/length(car_data$price)*100,2),"% of entries are 0", sep="")
#
# x[i,2] = paste(round(length(car_data[,i][which(is.na(car_data[,i]))])/length(car_data$price)*100,2),"% of entries are NA", sep="")
}
x
x = matrix(rep(NA,52),
26,
2)
for(i in 1:ncol(car_data)){
#Checking for zero values and NA's
x[i,1] = length(car_data[,i])
# x[i,1] = paste(round(length(car_data$price[which(car_data$price == 0)])/length(car_data$price)*100,2),"% of entries are 0", sep="")
#
# x[i,2] = paste(round(length(car_data[,i][which(is.na(car_data[,i]))])/length(car_data$price)*100,2),"% of entries are NA", sep="")
}
x
car_data[,i]
length(car_data[,i])
nrow(car_data[,i])
nrow(car_data[,1][which(is.na(car_data[,1]))]
nrow(car_data[,1][which(is.na(car_data[,1]))])
car_data[,1][which(is.na(car_data[,1]))]
is.na(car_data[,1])
is.na(car_data[,2])
is.na(car_data[,4])
is.na(car_data[,6])
car_data[,i][which(is.na(car_data[,6]))]
car_data[,6][which(is.na(car_data[,6]))]
subset(car_data[,i] %in% NA)
